{
    "sourceFile": "simulation_scripts/plotAllData.m",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 27,
            "patches": [
                {
                    "date": 1732425331634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732425594437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n     subplot(3,2,i);\r\n     hold on;\r\n     \r\n     plot(res.t,res.match_distur(:,i), colors{i}); \r\n-    plot(res.t,res.dis(:,i), colors{i}); \r\n+    % plot(res.t,res.dis(:,i), colors{i}); \r\n     xlabel('Time (s)');\r\n     ylabel('Force (N)');\r\n    % 设置图例\r\n     leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n"
                },
                {
                    "date": 1732425856058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n     subplot(3,2,i);\r\n     hold on;\r\n     \r\n     plot(res.t,res.match_distur(:,i), colors{i}); \r\n-    % plot(res.t,res.dis(:,i), colors{i}); \r\n+     plot(res.t,res.dis(:,i), colors{i}); \r\n     xlabel('Time (s)');\r\n     ylabel('Force (N)');\r\n    % 设置图例\r\n     leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n"
                },
                {
                    "date": 1732506222526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,9 @@\n     hold on;\r\n     % 绘制q和qd\r\n     plot(res.t, res.q(:,i), colors{i}); \r\n     plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n+    plot(res.t, res.q_hat2(:,i), '--','Color',[0 0 0]);\r\n     xlabel('Time (s)');\r\n     ylabel('position');\r\n    % 设置图例\r\n     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n@@ -171,9 +172,28 @@\n legend(\"q\", \"$q_d$\");\r\n hold off;\r\n \r\n \r\n+% 创建六个子图\r\n+fig8 = figure(8);\r\n+set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+title('The responses of p');\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.p0(:,i), colors{i}); \r\n+    plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n+    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n+    xlabel('Time (s)');\r\n+    ylabel('p');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n \r\n+\r\n saveas(fig1, ['Results/' '1.jpg']);\r\n saveas(fig2, ['Results/' '2.jpg']);\r\n saveas(fig3, ['Results/' '3.jpg']);\r\n saveas(fig4, ['Results/' '4.jpg']);\r\n"
                },
                {
                    "date": 1732518752244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,9 +183,9 @@\n     hold on;\r\n     % 绘制q和qd\r\n     plot(res.t, res.p0(:,i), colors{i}); \r\n     plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n-    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n+    plot(res.t, res.p_hat2(:,i), '--','Color',[1 0 0]);\r\n     xlabel('Time (s)');\r\n     ylabel('p');\r\n    % 设置图例\r\n     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n"
                },
                {
                    "date": 1732519026106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n % 创建六个子图\r\n fig8 = figure(8);\r\n set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-title('The responses of p');\r\n+\r\n for i = 1:6\r\n     subplot(3,2,i);\r\n     hold on;\r\n     % 绘制q和qd\r\n@@ -190,10 +190,10 @@\n    % 设置图例\r\n     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n     set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n end\r\n+sgtitle('The responses of p');\r\n \r\n-\r\n saveas(fig1, ['Results/' '1.jpg']);\r\n saveas(fig2, ['Results/' '2.jpg']);\r\n saveas(fig3, ['Results/' '3.jpg']);\r\n saveas(fig4, ['Results/' '4.jpg']);\r\n"
                },
                {
                    "date": 1732521435680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     hold on;\r\n     % 绘制q和qd\r\n     plot(res.t, res.q(:,i), colors{i}); \r\n     plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n-    plot(res.t, res.q_hat2(:,i), '--','Color',[0 0 0]);\r\n+    plot(res.t, res.q_hat2(:,i), '--','Color',[1 0 0]);\r\n     xlabel('Time (s)');\r\n     ylabel('position');\r\n    % 设置图例\r\n     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n"
                },
                {
                    "date": 1732531670474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,9 +183,9 @@\n     hold on;\r\n     % 绘制q和qd\r\n     plot(res.t, res.p0(:,i), colors{i}); \r\n     plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n-    plot(res.t, res.p_hat2(:,i), '--','Color',[1 0 0]);\r\n+    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n     xlabel('Time (s)');\r\n     ylabel('p');\r\n    % 设置图例\r\n     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n"
                },
                {
                    "date": 1732531833650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n for i = 1:6\r\n     subplot(3,2,i);\r\n     hold on;\r\n     \r\n-    plot(res.t,res.match_distur(:,i), colors{i}); \r\n+    plot(res.t,res.match_distur(:,i), '--','Color',[0 0 0]); \r\n      plot(res.t,res.dis(:,i), colors{i}); \r\n     xlabel('Time (s)');\r\n     ylabel('Force (N)');\r\n    % 设置图例\r\n"
                },
                {
                    "date": 1732780275487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,10 @@\n     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n     set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n end\r\n sgtitle('The responses of p');\r\n-\r\n+data = res.dis - res.match_distur;\r\n+mad(data,0)\r\n saveas(fig1, ['Results/' '1.jpg']);\r\n saveas(fig2, ['Results/' '2.jpg']);\r\n saveas(fig3, ['Results/' '3.jpg']);\r\n saveas(fig4, ['Results/' '4.jpg']);\r\n"
                },
                {
                    "date": 1732781112470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,8 +191,9 @@\n     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n     set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n end\r\n sgtitle('The responses of p');\r\n+disp(\"单个线性观测器平均绝对偏差\")\r\n data = res.dis - res.match_distur;\r\n mad(data,0)\r\n saveas(fig1, ['Results/' '1.jpg']);\r\n saveas(fig2, ['Results/' '2.jpg']);\r\n"
                },
                {
                    "date": 1732782723018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,9 @@\n     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n     set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n end\r\n sgtitle('The responses of p');\r\n-disp(\"单个线性观测器平均绝对偏差\")\r\n+disp(\"线性级联观测器平均绝对偏差\")\r\n data = res.dis - res.match_distur;\r\n mad(data,0)\r\n saveas(fig1, ['Results/' '1.jpg']);\r\n saveas(fig2, ['Results/' '2.jpg']);\r\n"
                },
                {
                    "date": 1732783001284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,9 @@\n     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n     set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n end\r\n sgtitle('The responses of p');\r\n-disp(\"线性级联观测器平均绝对偏差\")\r\n+disp(\"单个线性观测器平均绝对偏差\")\r\n data = res.dis - res.match_distur;\r\n mad(data,0)\r\n saveas(fig1, ['Results/' '1.jpg']);\r\n saveas(fig2, ['Results/' '2.jpg']);\r\n"
                },
                {
                    "date": 1732783343903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,9 @@\n     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n     set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n end\r\n sgtitle('The responses of p');\r\n-disp(\"单个线性观测器平均绝对偏差\")\r\n+disp(\"非线性级联观测器平均绝对偏差\")\r\n data = res.dis - res.match_distur;\r\n mad(data,0)\r\n saveas(fig1, ['Results/' '1.jpg']);\r\n saveas(fig2, ['Results/' '2.jpg']);\r\n"
                },
                {
                    "date": 1732932865593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,206 @@\n+function []=plotAllData(res,ctrl)\r\n+% Set Figure default values\r\n+set(0,'DefaultTextInterpreter','latex');\r\n+set(0,'DefaultLegendInterpreter','latex');\r\n+set(0,'DefaultAxesFontSize',11);\r\n+set(0,'DefaultLineLineWidth',2.0);\r\n+set(0,'DefaultAxesLineWidth',0.5);\r\n+set(0,'defaultAxesXGrid','on')\r\n+set(0,'defaultAxesYGrid','on')\r\n+set(0,'defaultAxesNextPlot','add')\r\n+% plot energy\r\n+fig1 = figure(1);\r\n+set(fig1, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+subplot(2,1,1)\r\n+plot(res.t,res.H)\r\n+xlabel('time (s)')\r\n+ylabel('Open-loop energy')\r\n+\r\n+subplot(2,1,2)\r\n+\r\n+plot(res.t,res.Hd)\r\n+grid on\r\n+xlabel('time (s)')\r\n+ylabel('Closed-loop energy $H_{smc}$')\r\n+\r\n+posArray=[\"x\",\"y\",\"z\",\"\\phi\",\"\\theta\",\"\\psi\"];\r\n+% 创建六个子图\r\n+fig2 = figure(2);\r\n+set(fig2, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.q(:,i), colors{i}); \r\n+    plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n+    plot(res.t, res.q_hat2(:,i), '--','Color',[1 0 0]);\r\n+    xlabel('Time (s)');\r\n+    ylabel('position');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+title('The responses of position');\r\n+\r\n+% 创建一个新的图形窗口\r\n+if ctrl.selector == 1 ||2\r\n+fig3 = figure(3);\r\n+set(fig3, 'Position', [100 100 1000 800]); % 设置图形窗口的位置和大小\r\n+\r\n+% 定义颜色序列\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+clf;\r\n+\r\n+% 绘制每一条曲线\r\n+for i = 1:6\r\n+    plot(res.t, res.phi(:,i), colors{i}); % 使用指定的颜色绘制曲线\r\n+    hold on; % 允许在同一图上绘制多条线\r\n+end\r\n+\r\n+% 设置图表属性\r\n+xlabel('Time (s)');\r\n+ylabel('Sliding mode surface');\r\n+title('The responses of sliding mode surface $\\sigma$');\r\n+\r\n+% 设置图例\r\n+legends = cell(1, 6);\r\n+for i = 1:6\r\n+    legends{i} = ['$' char(posArray(i)) '$']; % 假设 posArray 已经定义好\r\n+end\r\n+leg = legend(legends, 'Location', 'best');\r\n+set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+% zp = BaseZoom();\r\n+% zp.run;\r\n+%  zp.run;\r\n+% 保存图形\r\n+\r\n+ end\r\n+% 创建六个子图\r\n+fig4 = figure(4);\r\n+\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.u(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('Force (N)');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of input $u$')\r\n+\r\n+% 创建六个子图\r\n+fig5 = figure(5);\r\n+set(fig5, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.qe(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('error (m)');\r\n+    % if i == 1\r\n+    % zp = BaseZoom();\r\n+    %  zp.run;\r\n+    % end\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+\r\n+sgtitle('The responses of input $qe$')\r\n+\r\n+\r\n+\r\n+fig6=figure(6);\r\n+set(fig6, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.match_distur(:,i), '--','Color',[0 0 0]); \r\n+     plot(res.t,res.dis(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('Force (N)');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of disturbances')\r\n+\r\n+\r\n+\r\n+fig7=figure(7);\r\n+% 假设 res.q 和 res.qd 是 Nx6 的数组\r\n+% 实际轨迹和姿态数据\r\n+xyz_actual = res.q(:, 1:3);\r\n+\r\n+\r\n+% 理想轨迹和姿态数据\r\n+xyz_ideal = res.qd(:, 1:3);\r\n+\r\n+\r\n+% 提取 x, y, z 坐标\r\n+x_actual = xyz_actual(:, 1);\r\n+y_actual = xyz_actual(:, 2);\r\n+z_actual = xyz_actual(:, 3);\r\n+\r\n+x_ideal = xyz_ideal(:, 1);\r\n+y_ideal = xyz_ideal(:, 2);\r\n+z_ideal = xyz_ideal(:, 3);\r\n+\r\n+\r\n+\r\n+\r\n+% 绘制三维轨迹\r\n+plot3(x_actual, y_actual, z_actual, 'r');\r\n+hold on;\r\n+plot3(x_ideal, y_ideal, z_ideal,'--','Color',[0 0 0]);\r\n+grid on;\r\n+xlabel('X');\r\n+ylabel('Y');\r\n+zlabel('Z');\r\n+view(3)\r\n+\r\n+legend(\"q\", \"$q_d$\");\r\n+hold off;\r\n+\r\n+\r\n+% 创建六个子图\r\n+fig8 = figure(8);\r\n+set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.p0(:,i), colors{i}); \r\n+    plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n+    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n+    xlabel('Time (s)');\r\n+    ylabel('p');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of p');\r\n+figure(9);\r\n+plot(res.t,res.k4);\r\n+disp(\"非线性级联观测器平均绝对偏差\")\r\n+data = res.dis - res.match_distur;\r\n+mad(data,0)\r\n+saveas(fig1, ['Results/' '1.jpg']);\r\n+saveas(fig2, ['Results/' '2.jpg']);\r\n+saveas(fig3, ['Results/' '3.jpg']);\r\n+saveas(fig4, ['Results/' '4.jpg']);\r\n+saveas(fig5, ['Results/' '5.jpg']);\r\n+saveas(fig6, ['Results/' '6.jpg']);\r\n+saveas(fig7, ['Results/' '7.jpg']);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733110631639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,215 +196,13 @@\n plot(res.t,res.k4);\r\n disp(\"非线性级联观测器平均绝对偏差\")\r\n data = res.dis - res.match_distur;\r\n mad(data,0)\r\n+figure(10);\r\n+plot(res.t,res.Kd);\r\n saveas(fig1, ['Results/' '1.jpg']);\r\n saveas(fig2, ['Results/' '2.jpg']);\r\n saveas(fig3, ['Results/' '3.jpg']);\r\n saveas(fig4, ['Results/' '4.jpg']);\r\n saveas(fig5, ['Results/' '5.jpg']);\r\n saveas(fig6, ['Results/' '6.jpg']);\r\n-saveas(fig7, ['Results/' '7.jpg']);\n-function []=plotAllData(res,ctrl)\r\n-% Set Figure default values\r\n-set(0,'DefaultTextInterpreter','latex');\r\n-set(0,'DefaultLegendInterpreter','latex');\r\n-set(0,'DefaultAxesFontSize',11);\r\n-set(0,'DefaultLineLineWidth',2.0);\r\n-set(0,'DefaultAxesLineWidth',0.5);\r\n-set(0,'defaultAxesXGrid','on')\r\n-set(0,'defaultAxesYGrid','on')\r\n-set(0,'defaultAxesNextPlot','add')\r\n-% plot energy\r\n-fig1 = figure(1);\r\n-set(fig1, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-subplot(2,1,1)\r\n-plot(res.t,res.H)\r\n-xlabel('time (s)')\r\n-ylabel('Open-loop energy')\r\n-\r\n-subplot(2,1,2)\r\n-\r\n-plot(res.t,res.Hd)\r\n-grid on\r\n-xlabel('time (s)')\r\n-ylabel('Closed-loop energy $H_{smc}$')\r\n-\r\n-posArray=[\"x\",\"y\",\"z\",\"\\phi\",\"\\theta\",\"\\psi\"];\r\n-% 创建六个子图\r\n-fig2 = figure(2);\r\n-set(fig2, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.q(:,i), colors{i}); \r\n-    plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n-    plot(res.t, res.q_hat2(:,i), '--','Color',[1 0 0]);\r\n-    xlabel('Time (s)');\r\n-    ylabel('position');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-title('The responses of position');\r\n-\r\n-% 创建一个新的图形窗口\r\n-if ctrl.selector == 1 ||2\r\n-fig3 = figure(3);\r\n-set(fig3, 'Position', [100 100 1000 800]); % 设置图形窗口的位置和大小\r\n-\r\n-% 定义颜色序列\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-clf;\r\n-\r\n-% 绘制每一条曲线\r\n-for i = 1:6\r\n-    plot(res.t, res.phi(:,i), colors{i}); % 使用指定的颜色绘制曲线\r\n-    hold on; % 允许在同一图上绘制多条线\r\n-end\r\n-\r\n-% 设置图表属性\r\n-xlabel('Time (s)');\r\n-ylabel('Sliding mode surface');\r\n-title('The responses of sliding mode surface $\\sigma$');\r\n-\r\n-% 设置图例\r\n-legends = cell(1, 6);\r\n-for i = 1:6\r\n-    legends{i} = ['$' char(posArray(i)) '$']; % 假设 posArray 已经定义好\r\n-end\r\n-leg = legend(legends, 'Location', 'best');\r\n-set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-% zp = BaseZoom();\r\n-% zp.run;\r\n-%  zp.run;\r\n-% 保存图形\r\n-\r\n- end\r\n-% 创建六个子图\r\n-fig4 = figure(4);\r\n-\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.u(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('Force (N)');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of input $u$')\r\n-\r\n-% 创建六个子图\r\n-fig5 = figure(5);\r\n-set(fig5, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.qe(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('error (m)');\r\n-    % if i == 1\r\n-    % zp = BaseZoom();\r\n-    %  zp.run;\r\n-    % end\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-\r\n-sgtitle('The responses of input $qe$')\r\n-\r\n-\r\n-\r\n-fig6=figure(6);\r\n-set(fig6, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.match_distur(:,i), '--','Color',[0 0 0]); \r\n-     plot(res.t,res.dis(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('Force (N)');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of disturbances')\r\n-\r\n-\r\n-\r\n-fig7=figure(7);\r\n-% 假设 res.q 和 res.qd 是 Nx6 的数组\r\n-% 实际轨迹和姿态数据\r\n-xyz_actual = res.q(:, 1:3);\r\n-\r\n-\r\n-% 理想轨迹和姿态数据\r\n-xyz_ideal = res.qd(:, 1:3);\r\n-\r\n-\r\n-% 提取 x, y, z 坐标\r\n-x_actual = xyz_actual(:, 1);\r\n-y_actual = xyz_actual(:, 2);\r\n-z_actual = xyz_actual(:, 3);\r\n-\r\n-x_ideal = xyz_ideal(:, 1);\r\n-y_ideal = xyz_ideal(:, 2);\r\n-z_ideal = xyz_ideal(:, 3);\r\n-\r\n-\r\n-\r\n-\r\n-% 绘制三维轨迹\r\n-plot3(x_actual, y_actual, z_actual, 'r');\r\n-hold on;\r\n-plot3(x_ideal, y_ideal, z_ideal,'--','Color',[0 0 0]);\r\n-grid on;\r\n-xlabel('X');\r\n-ylabel('Y');\r\n-zlabel('Z');\r\n-view(3)\r\n-\r\n-legend(\"q\", \"$q_d$\");\r\n-hold off;\r\n-\r\n-\r\n-% 创建六个子图\r\n-fig8 = figure(8);\r\n-set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.p0(:,i), colors{i}); \r\n-    plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n-    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n-    xlabel('Time (s)');\r\n-    ylabel('p');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of p');\r\n-disp(\"非线性级联观测器平均绝对偏差\")\r\n-data = res.dis - res.match_distur;\r\n-mad(data,0)\r\n-saveas(fig1, ['Results/' '1.jpg']);\r\n-saveas(fig2, ['Results/' '2.jpg']);\r\n-saveas(fig3, ['Results/' '3.jpg']);\r\n-saveas(fig4, ['Results/' '4.jpg']);\r\n-saveas(fig5, ['Results/' '5.jpg']);\r\n-saveas(fig6, ['Results/' '6.jpg']);\r\n saveas(fig7, ['Results/' '7.jpg']);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733144173541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,222 @@\n+function []=plotAllData(res,ctrl)\r\n+% Set Figure default values\r\n+set(0,'DefaultTextInterpreter','latex');\r\n+set(0,'DefaultLegendInterpreter','latex');\r\n+set(0,'DefaultAxesFontSize',11);\r\n+set(0,'DefaultLineLineWidth',2.0);\r\n+set(0,'DefaultAxesLineWidth',0.5);\r\n+set(0,'defaultAxesXGrid','on')\r\n+set(0,'defaultAxesYGrid','on')\r\n+set(0,'defaultAxesNextPlot','add')\r\n+% plot energy\r\n+fig1 = figure(1);\r\n+set(fig1, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+subplot(2,1,1)\r\n+plot(res.t,res.H)\r\n+xlabel('time (s)')\r\n+ylabel('Open-loop energy')\r\n+\r\n+subplot(2,1,2)\r\n+\r\n+plot(res.t,res.Hd)\r\n+grid on\r\n+xlabel('time (s)')\r\n+ylabel('Closed-loop energy $H_{smc}$')\r\n+\r\n+posArray=[\"x\",\"y\",\"z\",\"\\phi\",\"\\theta\",\"\\psi\"];\r\n+% 创建六个子图\r\n+fig2 = figure(2);\r\n+set(fig2, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.q(:,i), colors{i}); \r\n+    plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n+    plot(res.t, res.q_hat2(:,i), '--','Color',[1 0 0]);\r\n+    xlabel('Time (s)');\r\n+    ylabel('position');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+title('The responses of position');\r\n+\r\n+% 创建一个新的图形窗口\r\n+if ctrl.selector == 1 ||2\r\n+fig3 = figure(3);\r\n+set(fig3, 'Position', [100 100 1000 800]); % 设置图形窗口的位置和大小\r\n+\r\n+% 定义颜色序列\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+clf;\r\n+\r\n+% 绘制每一条曲线\r\n+for i = 1:6\r\n+    plot(res.t, res.phi(:,i), colors{i}); % 使用指定的颜色绘制曲线\r\n+    hold on; % 允许在同一图上绘制多条线\r\n+end\r\n+\r\n+% 设置图表属性\r\n+xlabel('Time (s)');\r\n+ylabel('Sliding mode surface');\r\n+title('The responses of sliding mode surface $\\sigma$');\r\n+\r\n+% 设置图例\r\n+legends = cell(1, 6);\r\n+for i = 1:6\r\n+    legends{i} = ['$' char(posArray(i)) '$']; % 假设 posArray 已经定义好\r\n+end\r\n+leg = legend(legends, 'Location', 'best');\r\n+set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+% zp = BaseZoom();\r\n+% zp.run;\r\n+%  zp.run;\r\n+% 保存图形\r\n+\r\n+ end\r\n+% 创建六个子图\r\n+fig4 = figure(4);\r\n+\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.u(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('Force (N)');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of input $u$')\r\n+\r\n+% 创建六个子图\r\n+fig5 = figure(5);\r\n+set(fig5, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.qe(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('error (m)');\r\n+    % if i == 1\r\n+    % zp = BaseZoom();\r\n+    %  zp.run;\r\n+    % end\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+\r\n+sgtitle('The responses of input $qe$')\r\n+\r\n+\r\n+\r\n+fig6=figure(6);\r\n+set(fig6, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.match_distur(:,i), '--','Color',[0 0 0]); \r\n+     plot(res.t,res.dis(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('Force (N)');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of disturbances')\r\n+\r\n+\r\n+\r\n+fig7=figure(7);\r\n+% 假设 res.q 和 res.qd 是 Nx6 的数组\r\n+% 实际轨迹和姿态数据\r\n+xyz_actual = res.q(:, 1:3);\r\n+\r\n+\r\n+% 理想轨迹和姿态数据\r\n+xyz_ideal = res.qd(:, 1:3);\r\n+\r\n+\r\n+% 提取 x, y, z 坐标\r\n+x_actual = xyz_actual(:, 1);\r\n+y_actual = xyz_actual(:, 2);\r\n+z_actual = xyz_actual(:, 3);\r\n+\r\n+x_ideal = xyz_ideal(:, 1);\r\n+y_ideal = xyz_ideal(:, 2);\r\n+z_ideal = xyz_ideal(:, 3);\r\n+\r\n+\r\n+\r\n+\r\n+% 绘制三维轨迹\r\n+plot3(x_actual, y_actual, z_actual, 'r');\r\n+hold on;\r\n+plot3(x_ideal, y_ideal, z_ideal,'--','Color',[0 0 0]);\r\n+grid on;\r\n+xlabel('X');\r\n+ylabel('Y');\r\n+zlabel('Z');\r\n+view(3)\r\n+\r\n+legend(\"q\", \"$q_d$\");\r\n+hold off;\r\n+\r\n+\r\n+% 创建六个子图\r\n+fig8 = figure(8);\r\n+set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.p0(:,i), colors{i}); \r\n+    plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n+    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n+    xlabel('Time (s)');\r\n+    ylabel('p');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of p');\r\n+figure(9);\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.Kd(:,i), colors{i}); \r\n+\r\n+    xlabel('Time (s)');\r\n+    ylabel('damping');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of damping');\r\n+disp(\"非线性级联观测器平均绝对偏差\")\r\n+data = res.dis - res.match_distur;\r\n+mad(data,0)\r\n+figure(10);\r\n+plot(res.t,res.Kd);\r\n+saveas(fig1, ['Results/' '1.jpg']);\r\n+saveas(fig2, ['Results/' '2.jpg']);\r\n+saveas(fig3, ['Results/' '3.jpg']);\r\n+saveas(fig4, ['Results/' '4.jpg']);\r\n+saveas(fig5, ['Results/' '5.jpg']);\r\n+saveas(fig6, ['Results/' '6.jpg']);\r\n+saveas(fig7, ['Results/' '7.jpg']);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733144292239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,222 @@\n+function []=plotAllData(res,ctrl)\r\n+% Set Figure default values\r\n+set(0,'DefaultTextInterpreter','latex');\r\n+set(0,'DefaultLegendInterpreter','latex');\r\n+set(0,'DefaultAxesFontSize',11);\r\n+set(0,'DefaultLineLineWidth',2.0);\r\n+set(0,'DefaultAxesLineWidth',0.5);\r\n+set(0,'defaultAxesXGrid','on')\r\n+set(0,'defaultAxesYGrid','on')\r\n+set(0,'defaultAxesNextPlot','add')\r\n+% plot energy\r\n+fig1 = figure(1);\r\n+set(fig1, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+subplot(2,1,1)\r\n+plot(res.t,res.H)\r\n+xlabel('time (s)')\r\n+ylabel('Open-loop energy')\r\n+\r\n+subplot(2,1,2)\r\n+\r\n+plot(res.t,res.Hd)\r\n+grid on\r\n+xlabel('time (s)')\r\n+ylabel('Closed-loop energy $H_{smc}$')\r\n+\r\n+posArray=[\"x\",\"y\",\"z\",\"\\phi\",\"\\theta\",\"\\psi\"];\r\n+% 创建六个子图\r\n+fig2 = figure(2);\r\n+set(fig2, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.q(:,i), colors{i}); \r\n+    plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n+    plot(res.t, res.q_hat2(:,i), '--','Color',[1 0 0]);\r\n+    xlabel('Time (s)');\r\n+    ylabel('position');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+title('The responses of position');\r\n+\r\n+% 创建一个新的图形窗口\r\n+if ctrl.selector == 1 ||2\r\n+fig3 = figure(3);\r\n+set(fig3, 'Position', [100 100 1000 800]); % 设置图形窗口的位置和大小\r\n+\r\n+% 定义颜色序列\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+clf;\r\n+\r\n+% 绘制每一条曲线\r\n+for i = 1:6\r\n+    plot(res.t, res.phi(:,i), colors{i}); % 使用指定的颜色绘制曲线\r\n+    hold on; % 允许在同一图上绘制多条线\r\n+end\r\n+\r\n+% 设置图表属性\r\n+xlabel('Time (s)');\r\n+ylabel('Sliding mode surface');\r\n+title('The responses of sliding mode surface $\\sigma$');\r\n+\r\n+% 设置图例\r\n+legends = cell(1, 6);\r\n+for i = 1:6\r\n+    legends{i} = ['$' char(posArray(i)) '$']; % 假设 posArray 已经定义好\r\n+end\r\n+leg = legend(legends, 'Location', 'best');\r\n+set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+% zp = BaseZoom();\r\n+% zp.run;\r\n+%  zp.run;\r\n+% 保存图形\r\n+\r\n+ end\r\n+% 创建六个子图\r\n+fig4 = figure(4);\r\n+\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.u(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('Force (N)');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of input $u$')\r\n+\r\n+% 创建六个子图\r\n+fig5 = figure(5);\r\n+set(fig5, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.qe(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('error (m)');\r\n+    % if i == 1\r\n+    % zp = BaseZoom();\r\n+    %  zp.run;\r\n+    % end\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+\r\n+sgtitle('The responses of input $qe$')\r\n+\r\n+\r\n+\r\n+fig6=figure(6);\r\n+set(fig6, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.match_distur(:,i), '--','Color',[0 0 0]); \r\n+     plot(res.t,res.dis(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('Force (N)');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of disturbances')\r\n+\r\n+\r\n+\r\n+fig7=figure(7);\r\n+% 假设 res.q 和 res.qd 是 Nx6 的数组\r\n+% 实际轨迹和姿态数据\r\n+xyz_actual = res.q(:, 1:3);\r\n+\r\n+\r\n+% 理想轨迹和姿态数据\r\n+xyz_ideal = res.qd(:, 1:3);\r\n+\r\n+\r\n+% 提取 x, y, z 坐标\r\n+x_actual = xyz_actual(:, 1);\r\n+y_actual = xyz_actual(:, 2);\r\n+z_actual = xyz_actual(:, 3);\r\n+\r\n+x_ideal = xyz_ideal(:, 1);\r\n+y_ideal = xyz_ideal(:, 2);\r\n+z_ideal = xyz_ideal(:, 3);\r\n+\r\n+\r\n+\r\n+\r\n+% 绘制三维轨迹\r\n+plot3(x_actual, y_actual, z_actual, 'r');\r\n+hold on;\r\n+plot3(x_ideal, y_ideal, z_ideal,'--','Color',[0 0 0]);\r\n+grid on;\r\n+xlabel('X');\r\n+ylabel('Y');\r\n+zlabel('Z');\r\n+view(3)\r\n+\r\n+legend(\"q\", \"$q_d$\");\r\n+hold off;\r\n+\r\n+\r\n+% 创建六个子图\r\n+fig8 = figure(8);\r\n+set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.p0(:,i), colors{i}); \r\n+    plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n+    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n+    xlabel('Time (s)');\r\n+    ylabel('p');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of p');\r\n+figure(9);\r\n+plot(res.t,res.k4);\r\n+disp(\"非线性级联观测器平均绝对偏差\")\r\n+data = res.dis - res.match_distur;\r\n+mad(data,0)\r\n+figure(10);\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.Kd(:,i), colors{i}); \r\n+\r\n+    xlabel('Time (s)');\r\n+    ylabel('damping');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of damping');\r\n+saveas(fig1, ['Results/' '1.jpg']);\r\n+saveas(fig2, ['Results/' '2.jpg']);\r\n+saveas(fig3, ['Results/' '3.jpg']);\r\n+saveas(fig4, ['Results/' '4.jpg']);\r\n+saveas(fig5, ['Results/' '5.jpg']);\r\n+saveas(fig6, ['Results/' '6.jpg']);\r\n+saveas(fig7, ['Results/' '7.jpg']);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733144385355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,9 +203,9 @@\n for i = 1:6\r\n     subplot(3,2,i);\r\n     hold on;\r\n     % 绘制q和qd\r\n-    plot(res.t, res.Kd(:,i), colors{i}); \r\n+    plot(res.qe(:,i), res.Kd(:,i), colors{i}); \r\n \r\n     xlabel('Time (s)');\r\n     ylabel('damping');\r\n    % 设置图例\r\n@@ -218,435 +218,5 @@\n saveas(fig3, ['Results/' '3.jpg']);\r\n saveas(fig4, ['Results/' '4.jpg']);\r\n saveas(fig5, ['Results/' '5.jpg']);\r\n saveas(fig6, ['Results/' '6.jpg']);\r\n-saveas(fig7, ['Results/' '7.jpg']);\n-function []=plotAllData(res,ctrl)\r\n-% Set Figure default values\r\n-set(0,'DefaultTextInterpreter','latex');\r\n-set(0,'DefaultLegendInterpreter','latex');\r\n-set(0,'DefaultAxesFontSize',11);\r\n-set(0,'DefaultLineLineWidth',2.0);\r\n-set(0,'DefaultAxesLineWidth',0.5);\r\n-set(0,'defaultAxesXGrid','on')\r\n-set(0,'defaultAxesYGrid','on')\r\n-set(0,'defaultAxesNextPlot','add')\r\n-% plot energy\r\n-fig1 = figure(1);\r\n-set(fig1, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-subplot(2,1,1)\r\n-plot(res.t,res.H)\r\n-xlabel('time (s)')\r\n-ylabel('Open-loop energy')\r\n-\r\n-subplot(2,1,2)\r\n-\r\n-plot(res.t,res.Hd)\r\n-grid on\r\n-xlabel('time (s)')\r\n-ylabel('Closed-loop energy $H_{smc}$')\r\n-\r\n-posArray=[\"x\",\"y\",\"z\",\"\\phi\",\"\\theta\",\"\\psi\"];\r\n-% 创建六个子图\r\n-fig2 = figure(2);\r\n-set(fig2, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.q(:,i), colors{i}); \r\n-    plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n-    plot(res.t, res.q_hat2(:,i), '--','Color',[1 0 0]);\r\n-    xlabel('Time (s)');\r\n-    ylabel('position');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-title('The responses of position');\r\n-\r\n-% 创建一个新的图形窗口\r\n-if ctrl.selector == 1 ||2\r\n-fig3 = figure(3);\r\n-set(fig3, 'Position', [100 100 1000 800]); % 设置图形窗口的位置和大小\r\n-\r\n-% 定义颜色序列\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-clf;\r\n-\r\n-% 绘制每一条曲线\r\n-for i = 1:6\r\n-    plot(res.t, res.phi(:,i), colors{i}); % 使用指定的颜色绘制曲线\r\n-    hold on; % 允许在同一图上绘制多条线\r\n-end\r\n-\r\n-% 设置图表属性\r\n-xlabel('Time (s)');\r\n-ylabel('Sliding mode surface');\r\n-title('The responses of sliding mode surface $\\sigma$');\r\n-\r\n-% 设置图例\r\n-legends = cell(1, 6);\r\n-for i = 1:6\r\n-    legends{i} = ['$' char(posArray(i)) '$']; % 假设 posArray 已经定义好\r\n-end\r\n-leg = legend(legends, 'Location', 'best');\r\n-set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-% zp = BaseZoom();\r\n-% zp.run;\r\n-%  zp.run;\r\n-% 保存图形\r\n-\r\n- end\r\n-% 创建六个子图\r\n-fig4 = figure(4);\r\n-\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.u(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('Force (N)');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of input $u$')\r\n-\r\n-% 创建六个子图\r\n-fig5 = figure(5);\r\n-set(fig5, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.qe(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('error (m)');\r\n-    % if i == 1\r\n-    % zp = BaseZoom();\r\n-    %  zp.run;\r\n-    % end\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-\r\n-sgtitle('The responses of input $qe$')\r\n-\r\n-\r\n-\r\n-fig6=figure(6);\r\n-set(fig6, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.match_distur(:,i), '--','Color',[0 0 0]); \r\n-     plot(res.t,res.dis(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('Force (N)');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of disturbances')\r\n-\r\n-\r\n-\r\n-fig7=figure(7);\r\n-% 假设 res.q 和 res.qd 是 Nx6 的数组\r\n-% 实际轨迹和姿态数据\r\n-xyz_actual = res.q(:, 1:3);\r\n-\r\n-\r\n-% 理想轨迹和姿态数据\r\n-xyz_ideal = res.qd(:, 1:3);\r\n-\r\n-\r\n-% 提取 x, y, z 坐标\r\n-x_actual = xyz_actual(:, 1);\r\n-y_actual = xyz_actual(:, 2);\r\n-z_actual = xyz_actual(:, 3);\r\n-\r\n-x_ideal = xyz_ideal(:, 1);\r\n-y_ideal = xyz_ideal(:, 2);\r\n-z_ideal = xyz_ideal(:, 3);\r\n-\r\n-\r\n-\r\n-\r\n-% 绘制三维轨迹\r\n-plot3(x_actual, y_actual, z_actual, 'r');\r\n-hold on;\r\n-plot3(x_ideal, y_ideal, z_ideal,'--','Color',[0 0 0]);\r\n-grid on;\r\n-xlabel('X');\r\n-ylabel('Y');\r\n-zlabel('Z');\r\n-view(3)\r\n-\r\n-legend(\"q\", \"$q_d$\");\r\n-hold off;\r\n-\r\n-\r\n-% 创建六个子图\r\n-fig8 = figure(8);\r\n-set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.p0(:,i), colors{i}); \r\n-    plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n-    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n-    xlabel('Time (s)');\r\n-    ylabel('p');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of p');\r\n-figure(9);\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.Kd(:,i), colors{i}); \r\n-\r\n-    xlabel('Time (s)');\r\n-    ylabel('damping');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of damping');\r\n-disp(\"非线性级联观测器平均绝对偏差\")\r\n-data = res.dis - res.match_distur;\r\n-mad(data,0)\r\n-figure(10);\r\n-plot(res.t,res.Kd);\r\n-saveas(fig1, ['Results/' '1.jpg']);\r\n-saveas(fig2, ['Results/' '2.jpg']);\r\n-saveas(fig3, ['Results/' '3.jpg']);\r\n-saveas(fig4, ['Results/' '4.jpg']);\r\n-saveas(fig5, ['Results/' '5.jpg']);\r\n-saveas(fig6, ['Results/' '6.jpg']);\r\n-saveas(fig7, ['Results/' '7.jpg']);\n-function []=plotAllData(res,ctrl)\r\n-% Set Figure default values\r\n-set(0,'DefaultTextInterpreter','latex');\r\n-set(0,'DefaultLegendInterpreter','latex');\r\n-set(0,'DefaultAxesFontSize',11);\r\n-set(0,'DefaultLineLineWidth',2.0);\r\n-set(0,'DefaultAxesLineWidth',0.5);\r\n-set(0,'defaultAxesXGrid','on')\r\n-set(0,'defaultAxesYGrid','on')\r\n-set(0,'defaultAxesNextPlot','add')\r\n-% plot energy\r\n-fig1 = figure(1);\r\n-set(fig1, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-subplot(2,1,1)\r\n-plot(res.t,res.H)\r\n-xlabel('time (s)')\r\n-ylabel('Open-loop energy')\r\n-\r\n-subplot(2,1,2)\r\n-\r\n-plot(res.t,res.Hd)\r\n-grid on\r\n-xlabel('time (s)')\r\n-ylabel('Closed-loop energy $H_{smc}$')\r\n-\r\n-posArray=[\"x\",\"y\",\"z\",\"\\phi\",\"\\theta\",\"\\psi\"];\r\n-% 创建六个子图\r\n-fig2 = figure(2);\r\n-set(fig2, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.q(:,i), colors{i}); \r\n-    plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n-    plot(res.t, res.q_hat2(:,i), '--','Color',[1 0 0]);\r\n-    xlabel('Time (s)');\r\n-    ylabel('position');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-title('The responses of position');\r\n-\r\n-% 创建一个新的图形窗口\r\n-if ctrl.selector == 1 ||2\r\n-fig3 = figure(3);\r\n-set(fig3, 'Position', [100 100 1000 800]); % 设置图形窗口的位置和大小\r\n-\r\n-% 定义颜色序列\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-clf;\r\n-\r\n-% 绘制每一条曲线\r\n-for i = 1:6\r\n-    plot(res.t, res.phi(:,i), colors{i}); % 使用指定的颜色绘制曲线\r\n-    hold on; % 允许在同一图上绘制多条线\r\n-end\r\n-\r\n-% 设置图表属性\r\n-xlabel('Time (s)');\r\n-ylabel('Sliding mode surface');\r\n-title('The responses of sliding mode surface $\\sigma$');\r\n-\r\n-% 设置图例\r\n-legends = cell(1, 6);\r\n-for i = 1:6\r\n-    legends{i} = ['$' char(posArray(i)) '$']; % 假设 posArray 已经定义好\r\n-end\r\n-leg = legend(legends, 'Location', 'best');\r\n-set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-% zp = BaseZoom();\r\n-% zp.run;\r\n-%  zp.run;\r\n-% 保存图形\r\n-\r\n- end\r\n-% 创建六个子图\r\n-fig4 = figure(4);\r\n-\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.u(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('Force (N)');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of input $u$')\r\n-\r\n-% 创建六个子图\r\n-fig5 = figure(5);\r\n-set(fig5, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.qe(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('error (m)');\r\n-    % if i == 1\r\n-    % zp = BaseZoom();\r\n-    %  zp.run;\r\n-    % end\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-\r\n-sgtitle('The responses of input $qe$')\r\n-\r\n-\r\n-\r\n-fig6=figure(6);\r\n-set(fig6, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.match_distur(:,i), '--','Color',[0 0 0]); \r\n-     plot(res.t,res.dis(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('Force (N)');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of disturbances')\r\n-\r\n-\r\n-\r\n-fig7=figure(7);\r\n-% 假设 res.q 和 res.qd 是 Nx6 的数组\r\n-% 实际轨迹和姿态数据\r\n-xyz_actual = res.q(:, 1:3);\r\n-\r\n-\r\n-% 理想轨迹和姿态数据\r\n-xyz_ideal = res.qd(:, 1:3);\r\n-\r\n-\r\n-% 提取 x, y, z 坐标\r\n-x_actual = xyz_actual(:, 1);\r\n-y_actual = xyz_actual(:, 2);\r\n-z_actual = xyz_actual(:, 3);\r\n-\r\n-x_ideal = xyz_ideal(:, 1);\r\n-y_ideal = xyz_ideal(:, 2);\r\n-z_ideal = xyz_ideal(:, 3);\r\n-\r\n-\r\n-\r\n-\r\n-% 绘制三维轨迹\r\n-plot3(x_actual, y_actual, z_actual, 'r');\r\n-hold on;\r\n-plot3(x_ideal, y_ideal, z_ideal,'--','Color',[0 0 0]);\r\n-grid on;\r\n-xlabel('X');\r\n-ylabel('Y');\r\n-zlabel('Z');\r\n-view(3)\r\n-\r\n-legend(\"q\", \"$q_d$\");\r\n-hold off;\r\n-\r\n-\r\n-% 创建六个子图\r\n-fig8 = figure(8);\r\n-set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.p0(:,i), colors{i}); \r\n-    plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n-    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n-    xlabel('Time (s)');\r\n-    ylabel('p');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of p');\r\n-figure(9);\r\n-plot(res.t,res.k4);\r\n-disp(\"非线性级联观测器平均绝对偏差\")\r\n-data = res.dis - res.match_distur;\r\n-mad(data,0)\r\n-figure(10);\r\n-plot(res.t,res.Kd);\r\n-saveas(fig1, ['Results/' '1.jpg']);\r\n-saveas(fig2, ['Results/' '2.jpg']);\r\n-saveas(fig3, ['Results/' '3.jpg']);\r\n-saveas(fig4, ['Results/' '4.jpg']);\r\n-saveas(fig5, ['Results/' '5.jpg']);\r\n-saveas(fig6, ['Results/' '6.jpg']);\r\n saveas(fig7, ['Results/' '7.jpg']);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733577178703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,222 @@\n+function []=plotAllData(res,ctrl)\r\n+% Set Figure default values\r\n+set(0,'DefaultTextInterpreter','latex');\r\n+set(0,'DefaultLegendInterpreter','latex');\r\n+set(0,'DefaultAxesFontSize',11);\r\n+set(0,'DefaultLineLineWidth',2.0);\r\n+set(0,'DefaultAxesLineWidth',0.5);\r\n+set(0,'defaultAxesXGrid','on')\r\n+set(0,'defaultAxesYGrid','on')\r\n+set(0,'defaultAxesNextPlot','add')\r\n+% plot energy\r\n+fig1 = figure(1);\r\n+set(fig1, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+subplot(2,1,1)\r\n+plot(res.t,res.H)\r\n+xlabel('time (s)')\r\n+ylabel('Open-loop energy')\r\n+\r\n+subplot(2,1,2)\r\n+\r\n+plot(res.t,res.Hd)\r\n+grid on\r\n+xlabel('time (s)')\r\n+ylabel('Closed-loop energy $H_{smc}$')\r\n+\r\n+posArray=[\"x\",\"y\",\"z\",\"\\phi\",\"\\theta\",\"\\psi\"];\r\n+% 创建六个子图\r\n+fig2 = figure(2);\r\n+set(fig2, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.q(:,i), colors{i}); \r\n+    plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n+    % plot(res.t, res.q_hat2(:,i), '--','Color',[1 0 0]);\r\n+    xlabel('Time (s)');\r\n+    ylabel('position');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+title('The responses of position');\r\n+\r\n+% 创建一个新的图形窗口\r\n+if ctrl.selector == 1 ||2\r\n+fig3 = figure(3);\r\n+set(fig3, 'Position', [100 100 1000 800]); % 设置图形窗口的位置和大小\r\n+\r\n+% 定义颜色序列\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+clf;\r\n+\r\n+% 绘制每一条曲线\r\n+for i = 1:6\r\n+    plot(res.t, res.phi(:,i), colors{i}); % 使用指定的颜色绘制曲线\r\n+    hold on; % 允许在同一图上绘制多条线\r\n+end\r\n+\r\n+% 设置图表属性\r\n+xlabel('Time (s)');\r\n+ylabel('Sliding mode surface');\r\n+title('The responses of sliding mode surface $\\sigma$');\r\n+\r\n+% 设置图例\r\n+legends = cell(1, 6);\r\n+for i = 1:6\r\n+    legends{i} = ['$' char(posArray(i)) '$']; % 假设 posArray 已经定义好\r\n+end\r\n+leg = legend(legends, 'Location', 'best');\r\n+set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+% zp = BaseZoom();\r\n+% zp.run;\r\n+%  zp.run;\r\n+% 保存图形\r\n+\r\n+ end\r\n+% 创建六个子图\r\n+fig4 = figure(4);\r\n+\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.u(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('Force (N)');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of input $u$')\r\n+\r\n+% 创建六个子图\r\n+fig5 = figure(5);\r\n+set(fig5, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.qe(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('error (m)');\r\n+    % if i == 1\r\n+    % zp = BaseZoom();\r\n+    %  zp.run;\r\n+    % end\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+\r\n+sgtitle('The responses of input $qe$')\r\n+\r\n+\r\n+\r\n+fig6=figure(6);\r\n+set(fig6, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.match_distur(:,i), '--','Color',[0 0 0]); \r\n+     plot(res.t,res.dis(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('Force (N)');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of disturbances')\r\n+\r\n+\r\n+\r\n+fig7=figure(7);\r\n+% 假设 res.q 和 res.qd 是 Nx6 的数组\r\n+% 实际轨迹和姿态数据\r\n+xyz_actual = res.q(:, 1:3);\r\n+\r\n+\r\n+% 理想轨迹和姿态数据\r\n+xyz_ideal = res.qd(:, 1:3);\r\n+\r\n+\r\n+% 提取 x, y, z 坐标\r\n+x_actual = xyz_actual(:, 1);\r\n+y_actual = xyz_actual(:, 2);\r\n+z_actual = xyz_actual(:, 3);\r\n+\r\n+x_ideal = xyz_ideal(:, 1);\r\n+y_ideal = xyz_ideal(:, 2);\r\n+z_ideal = xyz_ideal(:, 3);\r\n+\r\n+\r\n+\r\n+\r\n+% 绘制三维轨迹\r\n+plot3(x_actual, y_actual, z_actual, 'r');\r\n+hold on;\r\n+plot3(x_ideal, y_ideal, z_ideal,'--','Color',[0 0 0]);\r\n+grid on;\r\n+xlabel('X');\r\n+ylabel('Y');\r\n+zlabel('Z');\r\n+view(3)\r\n+\r\n+legend(\"q\", \"$q_d$\");\r\n+hold off;\r\n+\r\n+\r\n+% 创建六个子图\r\n+fig8 = figure(8);\r\n+set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.p0(:,i), colors{i}); \r\n+    plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n+    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n+    xlabel('Time (s)');\r\n+    ylabel('p');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of p');\r\n+figure(9);\r\n+plot(res.t,res.k4);\r\n+disp(\"非线性级联观测器平均绝对偏差\")\r\n+data = res.dis - res.match_distur;\r\n+mad(data,0)\r\n+figure(10);\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.qe(:,i), res.Kd(:,i), colors{i}); \r\n+\r\n+    xlabel('Time (s)');\r\n+    ylabel('damping');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of damping');\r\n+saveas(fig1, ['Results/' '1.jpg']);\r\n+saveas(fig2, ['Results/' '2.jpg']);\r\n+saveas(fig3, ['Results/' '3.jpg']);\r\n+saveas(fig4, ['Results/' '4.jpg']);\r\n+saveas(fig5, ['Results/' '5.jpg']);\r\n+saveas(fig6, ['Results/' '6.jpg']);\r\n+saveas(fig7, ['Results/' '7.jpg']);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733579520672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,235 +191,16 @@\n     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n     set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n end\r\n sgtitle('The responses of p');\r\n+if ctrl.selector == 1\r\n+\r\n figure(9);\r\n plot(res.t,res.k4);\r\n disp(\"非线性级联观测器平均绝对偏差\")\r\n data = res.dis - res.match_distur;\r\n mad(data,0)\r\n-figure(10);\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.qe(:,i), res.Kd(:,i), colors{i}); \r\n-\r\n-    xlabel('Time (s)');\r\n-    ylabel('damping');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n end\r\n-sgtitle('The responses of damping');\r\n-saveas(fig1, ['Results/' '1.jpg']);\r\n-saveas(fig2, ['Results/' '2.jpg']);\r\n-saveas(fig3, ['Results/' '3.jpg']);\r\n-saveas(fig4, ['Results/' '4.jpg']);\r\n-saveas(fig5, ['Results/' '5.jpg']);\r\n-saveas(fig6, ['Results/' '6.jpg']);\r\n-saveas(fig7, ['Results/' '7.jpg']);\n-function []=plotAllData(res,ctrl)\r\n-% Set Figure default values\r\n-set(0,'DefaultTextInterpreter','latex');\r\n-set(0,'DefaultLegendInterpreter','latex');\r\n-set(0,'DefaultAxesFontSize',11);\r\n-set(0,'DefaultLineLineWidth',2.0);\r\n-set(0,'DefaultAxesLineWidth',0.5);\r\n-set(0,'defaultAxesXGrid','on')\r\n-set(0,'defaultAxesYGrid','on')\r\n-set(0,'defaultAxesNextPlot','add')\r\n-% plot energy\r\n-fig1 = figure(1);\r\n-set(fig1, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-subplot(2,1,1)\r\n-plot(res.t,res.H)\r\n-xlabel('time (s)')\r\n-ylabel('Open-loop energy')\r\n-\r\n-subplot(2,1,2)\r\n-\r\n-plot(res.t,res.Hd)\r\n-grid on\r\n-xlabel('time (s)')\r\n-ylabel('Closed-loop energy $H_{smc}$')\r\n-\r\n-posArray=[\"x\",\"y\",\"z\",\"\\phi\",\"\\theta\",\"\\psi\"];\r\n-% 创建六个子图\r\n-fig2 = figure(2);\r\n-set(fig2, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.q(:,i), colors{i}); \r\n-    plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n-    plot(res.t, res.q_hat2(:,i), '--','Color',[1 0 0]);\r\n-    xlabel('Time (s)');\r\n-    ylabel('position');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-title('The responses of position');\r\n-\r\n-% 创建一个新的图形窗口\r\n-if ctrl.selector == 1 ||2\r\n-fig3 = figure(3);\r\n-set(fig3, 'Position', [100 100 1000 800]); % 设置图形窗口的位置和大小\r\n-\r\n-% 定义颜色序列\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-clf;\r\n-\r\n-% 绘制每一条曲线\r\n-for i = 1:6\r\n-    plot(res.t, res.phi(:,i), colors{i}); % 使用指定的颜色绘制曲线\r\n-    hold on; % 允许在同一图上绘制多条线\r\n-end\r\n-\r\n-% 设置图表属性\r\n-xlabel('Time (s)');\r\n-ylabel('Sliding mode surface');\r\n-title('The responses of sliding mode surface $\\sigma$');\r\n-\r\n-% 设置图例\r\n-legends = cell(1, 6);\r\n-for i = 1:6\r\n-    legends{i} = ['$' char(posArray(i)) '$']; % 假设 posArray 已经定义好\r\n-end\r\n-leg = legend(legends, 'Location', 'best');\r\n-set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-% zp = BaseZoom();\r\n-% zp.run;\r\n-%  zp.run;\r\n-% 保存图形\r\n-\r\n- end\r\n-% 创建六个子图\r\n-fig4 = figure(4);\r\n-\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.u(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('Force (N)');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of input $u$')\r\n-\r\n-% 创建六个子图\r\n-fig5 = figure(5);\r\n-set(fig5, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.qe(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('error (m)');\r\n-    % if i == 1\r\n-    % zp = BaseZoom();\r\n-    %  zp.run;\r\n-    % end\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-\r\n-sgtitle('The responses of input $qe$')\r\n-\r\n-\r\n-\r\n-fig6=figure(6);\r\n-set(fig6, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.match_distur(:,i), '--','Color',[0 0 0]); \r\n-     plot(res.t,res.dis(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('Force (N)');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of disturbances')\r\n-\r\n-\r\n-\r\n-fig7=figure(7);\r\n-% 假设 res.q 和 res.qd 是 Nx6 的数组\r\n-% 实际轨迹和姿态数据\r\n-xyz_actual = res.q(:, 1:3);\r\n-\r\n-\r\n-% 理想轨迹和姿态数据\r\n-xyz_ideal = res.qd(:, 1:3);\r\n-\r\n-\r\n-% 提取 x, y, z 坐标\r\n-x_actual = xyz_actual(:, 1);\r\n-y_actual = xyz_actual(:, 2);\r\n-z_actual = xyz_actual(:, 3);\r\n-\r\n-x_ideal = xyz_ideal(:, 1);\r\n-y_ideal = xyz_ideal(:, 2);\r\n-z_ideal = xyz_ideal(:, 3);\r\n-\r\n-\r\n-\r\n-\r\n-% 绘制三维轨迹\r\n-plot3(x_actual, y_actual, z_actual, 'r');\r\n-hold on;\r\n-plot3(x_ideal, y_ideal, z_ideal,'--','Color',[0 0 0]);\r\n-grid on;\r\n-xlabel('X');\r\n-ylabel('Y');\r\n-zlabel('Z');\r\n-view(3)\r\n-\r\n-legend(\"q\", \"$q_d$\");\r\n-hold off;\r\n-\r\n-\r\n-% 创建六个子图\r\n-fig8 = figure(8);\r\n-set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.p0(:,i), colors{i}); \r\n-    plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n-    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n-    xlabel('Time (s)');\r\n-    ylabel('p');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of p');\r\n-figure(9);\r\n-plot(res.t,res.k4);\r\n-disp(\"非线性级联观测器平均绝对偏差\")\r\n-data = res.dis - res.match_distur;\r\n-mad(data,0)\r\n figure(10);\r\n colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n \r\n for i = 1:6\r\n"
                },
                {
                    "date": 1733581755075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,9 +206,9 @@\n for i = 1:6\r\n     subplot(3,2,i);\r\n     hold on;\r\n     % 绘制q和qd\r\n-    plot(res.qe(:,i), res.Kd(:,i), colors{i}); \r\n+    plot(res.t, res.Kd(:,i), colors{i}); \r\n \r\n     xlabel('Time (s)');\r\n     ylabel('damping');\r\n    % 设置图例\r\n"
                },
                {
                    "date": 1733838578894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,225 @@\n+function []=plotAllData(res,ctrl)\r\n+% Set Figure default values\r\n+set(0,'DefaultTextInterpreter','latex');\r\n+set(0,'DefaultLegendInterpreter','latex');\r\n+set(0,'DefaultAxesFontSize',11);\r\n+set(0,'DefaultLineLineWidth',2.0);\r\n+set(0,'DefaultAxesLineWidth',0.5);\r\n+set(0,'defaultAxesXGrid','on')\r\n+set(0,'defaultAxesYGrid','on')\r\n+set(0,'defaultAxesNextPlot','add')\r\n+% plot energy\r\n+fig1 = figure(1);\r\n+set(fig1, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+subplot(2,1,1)\r\n+plot(res.t,res.H)\r\n+xlabel('time (s)')\r\n+ylabel('Open-loop energy')\r\n+\r\n+subplot(2,1,2)\r\n+\r\n+plot(res.t,res.Hd)\r\n+grid on\r\n+xlabel('time (s)')\r\n+ylabel('Closed-loop energy $H_{smc}$')\r\n+\r\n+posArray=[\"x\",\"y\",\"z\",\"\\phi\",\"\\theta\",\"\\psi\"];\r\n+% 创建六个子图\r\n+fig2 = figure(2);\r\n+set(fig2, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.q(:,i), colors{i}); \r\n+    plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n+    % plot(res.t, res.q_hat2(:,i), '--','Color',[1 0 0]);\r\n+    xlabel('Time (s)');\r\n+    ylabel('position');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+title('The responses of position');\r\n+\r\n+% 创建一个新的图形窗口\r\n+if ctrl.selector == 1 ||2\r\n+fig3 = figure(3);\r\n+set(fig3, 'Position', [100 100 1000 800]); % 设置图形窗口的位置和大小\r\n+\r\n+% 定义颜色序列\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+clf;\r\n+\r\n+% 绘制每一条曲线\r\n+for i = 1:6\r\n+    plot(res.t, res.phi(:,i), colors{i}); % 使用指定的颜色绘制曲线\r\n+    hold on; % 允许在同一图上绘制多条线\r\n+end\r\n+\r\n+% 设置图表属性\r\n+xlabel('Time (s)');\r\n+ylabel('Sliding mode surface');\r\n+title('The responses of sliding mode surface $\\sigma$');\r\n+\r\n+% 设置图例\r\n+legends = cell(1, 6);\r\n+for i = 1:6\r\n+    legends{i} = ['$' char(posArray(i)) '$']; % 假设 posArray 已经定义好\r\n+end\r\n+leg = legend(legends, 'Location', 'best');\r\n+set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+% zp = BaseZoom();\r\n+% zp.run;\r\n+%  zp.run;\r\n+% 保存图形\r\n+\r\n+ end\r\n+% 创建六个子图\r\n+fig4 = figure(4);\r\n+\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.u(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('Force (N)');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of input $u$')\r\n+\r\n+% 创建六个子图\r\n+fig5 = figure(5);\r\n+set(fig5, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.qe(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('error (m)');\r\n+    % if i == 1\r\n+    % zp = BaseZoom();\r\n+    %  zp.run;\r\n+    % end\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+\r\n+sgtitle('The responses of input $qe$')\r\n+\r\n+\r\n+\r\n+fig6=figure(6);\r\n+set(fig6, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.match_distur(:,i), '-','Color',[0 0 0]); \r\n+     plot(res.t,res.dis(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('Force (N)');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of disturbances')\r\n+\r\n+\r\n+\r\n+fig7=figure(7);\r\n+% 假设 res.q 和 res.qd 是 Nx6 的数组\r\n+% 实际轨迹和姿态数据\r\n+xyz_actual = res.q(:, 1:3);\r\n+\r\n+\r\n+% 理想轨迹和姿态数据\r\n+xyz_ideal = res.qd(:, 1:3);\r\n+\r\n+\r\n+% 提取 x, y, z 坐标\r\n+x_actual = xyz_actual(:, 1);\r\n+y_actual = xyz_actual(:, 2);\r\n+z_actual = xyz_actual(:, 3);\r\n+\r\n+x_ideal = xyz_ideal(:, 1);\r\n+y_ideal = xyz_ideal(:, 2);\r\n+z_ideal = xyz_ideal(:, 3);\r\n+\r\n+\r\n+\r\n+\r\n+% 绘制三维轨迹\r\n+plot3(x_actual, y_actual, z_actual, 'r');\r\n+hold on;\r\n+plot3(x_ideal, y_ideal, z_ideal,'--','Color',[0 0 0]);\r\n+grid on;\r\n+xlabel('X');\r\n+ylabel('Y');\r\n+zlabel('Z');\r\n+view(3)\r\n+\r\n+legend(\"q\", \"$q_d$\");\r\n+hold off;\r\n+\r\n+\r\n+% 创建六个子图\r\n+fig8 = figure(8);\r\n+set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.p0(:,i), colors{i}); \r\n+    plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n+    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n+    xlabel('Time (s)');\r\n+    ylabel('p');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of p');\r\n+if ctrl.selector == 1\r\n+\r\n+figure(9);\r\n+plot(res.t,res.k4);\r\n+disp(\"非线性级联观测器平均绝对偏差\")\r\n+data = res.dis - res.match_distur;\r\n+mad(data,0)\r\n+end\r\n+figure(10);\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.Kd(:,i), colors{i}); \r\n+\r\n+    xlabel('Time (s)');\r\n+    ylabel('damping');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of damping');\r\n+saveas(fig1, ['Results/' '1.jpg']);\r\n+saveas(fig2, ['Results/' '2.jpg']);\r\n+saveas(fig3, ['Results/' '3.jpg']);\r\n+saveas(fig4, ['Results/' '4.jpg']);\r\n+saveas(fig5, ['Results/' '5.jpg']);\r\n+saveas(fig6, ['Results/' '6.jpg']);\r\n+saveas(fig7, ['Results/' '7.jpg']);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733880070817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,228 @@\n+function []=plotAllData(res,ctrl)\r\n+% Set Figure default values\r\n+set(0,'DefaultTextInterpreter','latex');\r\n+set(0,'DefaultLegendInterpreter','latex');\r\n+set(0,'DefaultAxesFontSize',11);\r\n+set(0,'DefaultLineLineWidth',2.0);\r\n+set(0,'DefaultAxesLineWidth',0.5);\r\n+set(0,'defaultAxesXGrid','on')\r\n+set(0,'defaultAxesYGrid','on')\r\n+set(0,'defaultAxesNextPlot','add')\r\n+% plot energy\r\n+fig1 = figure(1);\r\n+set(fig1, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+subplot(2,1,1)\r\n+plot(res.t,res.H)\r\n+xlabel('time (s)')\r\n+ylabel('Open-loop energy')\r\n+\r\n+subplot(2,1,2)\r\n+\r\n+plot(res.t,res.Hd)\r\n+grid on\r\n+xlabel('time (s)')\r\n+ylabel('Closed-loop energy $H_{smc}$')\r\n+\r\n+posArray=[\"x\",\"y\",\"z\",\"\\phi\",\"\\theta\",\"\\psi\"];\r\n+% 创建六个子图\r\n+fig2 = figure(2);\r\n+set(fig2, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.q(:,i), colors{i}); \r\n+    plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n+    % plot(res.t, res.q_hat2(:,i), '--','Color',[1 0 0]);\r\n+    xlabel('Time (s)');\r\n+    ylabel('position');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+title('The responses of position');\r\n+\r\n+% 创建一个新的图形窗口\r\n+if ctrl.selector == 1 ||2\r\n+fig3 = figure(3);\r\n+set(fig3, 'Position', [100 100 1000 800]); % 设置图形窗口的位置和大小\r\n+\r\n+% 定义颜色序列\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+clf;\r\n+\r\n+% 绘制每一条曲线\r\n+for i = 1:6\r\n+    plot(res.t, res.phi(:,i), colors{i}); % 使用指定的颜色绘制曲线\r\n+    hold on; % 允许在同一图上绘制多条线\r\n+end\r\n+\r\n+% 设置图表属性\r\n+xlabel('Time (s)');\r\n+ylabel('Sliding mode surface');\r\n+title('The responses of sliding mode surface $\\sigma$');\r\n+\r\n+% 设置图例\r\n+legends = cell(1, 6);\r\n+for i = 1:6\r\n+    legends{i} = ['$' char(posArray(i)) '$']; % 假设 posArray 已经定义好\r\n+end\r\n+leg = legend(legends, 'Location', 'best');\r\n+set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+% zp = BaseZoom();\r\n+% zp.run;\r\n+%  zp.run;\r\n+% 保存图形\r\n+\r\n+ end\r\n+% 创建六个子图\r\n+fig4 = figure(4);\r\n+\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.u(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('Force (N)');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of input $u$')\r\n+\r\n+% 创建六个子图\r\n+fig5 = figure(5);\r\n+set(fig5, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.qe(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('error (m)');\r\n+    % if i == 1\r\n+    % zp = BaseZoom();\r\n+    %  zp.run;\r\n+    % end\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+\r\n+sgtitle('The responses of input $qe$')\r\n+\r\n+\r\n+\r\n+fig6=figure(6);\r\n+set(fig6, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.match_distur(:,i), '-','Color',[0 0 0]); \r\n+     plot(res.t,res.dis(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('Force (N)');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of disturbances')\r\n+\r\n+\r\n+\r\n+fig7=figure(7);\r\n+% 假设 res.q 和 res.qd 是 Nx6 的数组\r\n+% 实际轨迹和姿态数据\r\n+xyz_actual = res.q(:, 1:3);\r\n+\r\n+\r\n+% 理想轨迹和姿态数据\r\n+xyz_ideal = res.qd(:, 1:3);\r\n+\r\n+\r\n+% 提取 x, y, z 坐标\r\n+x_actual = xyz_actual(:, 1);\r\n+y_actual = xyz_actual(:, 2);\r\n+z_actual = xyz_actual(:, 3);\r\n+\r\n+x_ideal = xyz_ideal(:, 1);\r\n+y_ideal = xyz_ideal(:, 2);\r\n+z_ideal = xyz_ideal(:, 3);\r\n+\r\n+\r\n+\r\n+\r\n+% 绘制三维轨迹\r\n+plot3(x_actual, y_actual, z_actual, 'r');\r\n+hold on;\r\n+plot3(x_ideal, y_ideal, z_ideal,'--','Color',[0 0 0]);\r\n+grid on;\r\n+xlabel('X');\r\n+ylabel('Y');\r\n+zlabel('Z');\r\n+view(3)\r\n+\r\n+legend(\"q\", \"$q_d$\");\r\n+hold off;\r\n+\r\n+\r\n+% 创建六个子图\r\n+fig8 = figure(8);\r\n+set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.p0(:,i), colors{i}); \r\n+    plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n+    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n+    xlabel('Time (s)');\r\n+    ylabel('p');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of p');\r\n+if ctrl.selector == 1\r\n+\r\n+figure(9);\r\n+plot(res.t,res.k4);\r\n+disp(\"非线性级联观测器平均绝对偏差\")\r\n+data = res.dis - res.match_distur;\r\n+mad(data,0)\r\n+end\r\n+figure(10);\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.Kd(:,i), colors{i}); \r\n+\r\n+    xlabel('Time (s)');\r\n+    ylabel('damping');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of damping');\r\n+saveas(fig1, ['Results/' '1.jpg']);\r\n+saveas(fig2, ['Results/' '2.jpg']);\r\n+saveas(fig3, ['Results/' '3.jpg']);\r\n+saveas(fig4, ['Results/' '4.jpg']);\r\n+saveas(fig5, ['Results/' '5.jpg']);\r\n+saveas(fig6, ['Results/' '6.jpg']);\r\n+saveas(fig7, ['Results/' '7.jpg']);\r\n+saveas(fig8, ['Results/' '8.jpg']);\r\n+saveas(fig9, ['Results/' '9.jpg']);\r\n+saveas(fig10, ['Results/' '10.jpg']);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733881050178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,228 @@\n+function []=plotAllData(res,ctrl)\r\n+% Set Figure default values\r\n+set(0,'DefaultTextInterpreter','latex');\r\n+set(0,'DefaultLegendInterpreter','latex');\r\n+set(0,'DefaultAxesFontSize',11);\r\n+set(0,'DefaultLineLineWidth',2.0);\r\n+set(0,'DefaultAxesLineWidth',0.5);\r\n+set(0,'defaultAxesXGrid','on')\r\n+set(0,'defaultAxesYGrid','on')\r\n+set(0,'defaultAxesNextPlot','add')\r\n+% plot energy\r\n+fig1 = figure(1);\r\n+set(fig1, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+subplot(2,1,1)\r\n+plot(res.t,res.H)\r\n+xlabel('time (s)')\r\n+ylabel('Open-loop energy')\r\n+\r\n+subplot(2,1,2)\r\n+\r\n+plot(res.t,res.Hd)\r\n+grid on\r\n+xlabel('time (s)')\r\n+ylabel('Closed-loop energy $H_{smc}$')\r\n+\r\n+posArray=[\"x\",\"y\",\"z\",\"\\phi\",\"\\theta\",\"\\psi\"];\r\n+% 创建六个子图\r\n+fig2 = figure(2);\r\n+set(fig2, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.q(:,i), colors{i}); \r\n+    plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n+    % plot(res.t, res.q_hat2(:,i), '--','Color',[1 0 0]);\r\n+    xlabel('Time (s)');\r\n+    ylabel('position');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+title('The responses of position');\r\n+\r\n+% 创建一个新的图形窗口\r\n+if ctrl.selector == 1 ||2\r\n+fig3 = figure(3);\r\n+set(fig3, 'Position', [100 100 1000 800]); % 设置图形窗口的位置和大小\r\n+\r\n+% 定义颜色序列\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+clf;\r\n+\r\n+% 绘制每一条曲线\r\n+for i = 1:6\r\n+    plot(res.t, res.phi(:,i), colors{i}); % 使用指定的颜色绘制曲线\r\n+    hold on; % 允许在同一图上绘制多条线\r\n+end\r\n+\r\n+% 设置图表属性\r\n+xlabel('Time (s)');\r\n+ylabel('Sliding mode surface');\r\n+title('The responses of sliding mode surface $\\sigma$');\r\n+\r\n+% 设置图例\r\n+legends = cell(1, 6);\r\n+for i = 1:6\r\n+    legends{i} = ['$' char(posArray(i)) '$']; % 假设 posArray 已经定义好\r\n+end\r\n+leg = legend(legends, 'Location', 'best');\r\n+set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+% zp = BaseZoom();\r\n+% zp.run;\r\n+%  zp.run;\r\n+% 保存图形\r\n+\r\n+ end\r\n+% 创建六个子图\r\n+fig4 = figure(4);\r\n+\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.u(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('Force (N)');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of input $u$')\r\n+\r\n+% 创建六个子图\r\n+fig5 = figure(5);\r\n+set(fig5, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.qe(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('error (m)');\r\n+    % if i == 1\r\n+    % zp = BaseZoom();\r\n+    %  zp.run;\r\n+    % end\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+\r\n+sgtitle('The responses of input $qe$')\r\n+\r\n+\r\n+\r\n+fig6=figure(6);\r\n+set(fig6, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    \r\n+    plot(res.t,res.match_distur(:,i), '-','Color',[0 0 0]); \r\n+     plot(res.t,res.dis(:,i), colors{i}); \r\n+    xlabel('Time (s)');\r\n+    ylabel('Force (N)');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of disturbances')\r\n+\r\n+\r\n+\r\n+fig7=figure(7);\r\n+% 假设 res.q 和 res.qd 是 Nx6 的数组\r\n+% 实际轨迹和姿态数据\r\n+xyz_actual = res.q(:, 1:3);\r\n+\r\n+\r\n+% 理想轨迹和姿态数据\r\n+xyz_ideal = res.qd(:, 1:3);\r\n+\r\n+\r\n+% 提取 x, y, z 坐标\r\n+x_actual = xyz_actual(:, 1);\r\n+y_actual = xyz_actual(:, 2);\r\n+z_actual = xyz_actual(:, 3);\r\n+\r\n+x_ideal = xyz_ideal(:, 1);\r\n+y_ideal = xyz_ideal(:, 2);\r\n+z_ideal = xyz_ideal(:, 3);\r\n+\r\n+\r\n+\r\n+\r\n+% 绘制三维轨迹\r\n+plot3(x_actual, y_actual, z_actual, 'r');\r\n+hold on;\r\n+plot3(x_ideal, y_ideal, z_ideal,'--','Color',[0 0 0]);\r\n+grid on;\r\n+xlabel('X');\r\n+ylabel('Y');\r\n+zlabel('Z');\r\n+view(3)\r\n+\r\n+legend(\"q\", \"$q_d$\");\r\n+hold off;\r\n+\r\n+\r\n+% 创建六个子图\r\n+fig8 = figure(8);\r\n+set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.p0(:,i), colors{i}); \r\n+    plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n+    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n+    xlabel('Time (s)');\r\n+    ylabel('p');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of p');\r\n+if ctrl.selector == 1\r\n+\r\n+fig9 = figure(9);\r\n+plot(res.t,res.k4);\r\n+disp(\"非线性级联观测器平均绝对偏差\")\r\n+data = res.dis - res.match_distur;\r\n+mad(data,0)\r\n+end\r\n+fig10 = figure(10);\r\n+colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+\r\n+for i = 1:6\r\n+    subplot(3,2,i);\r\n+    hold on;\r\n+    % 绘制q和qd\r\n+    plot(res.t, res.Kd(:,i), colors{i}); \r\n+\r\n+    xlabel('Time (s)');\r\n+    ylabel('damping');\r\n+   % 设置图例\r\n+    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+end\r\n+sgtitle('The responses of damping');\r\n+saveas(fig1, ['Results/' '1.jpg']);\r\n+saveas(fig2, ['Results/' '2.jpg']);\r\n+saveas(fig3, ['Results/' '3.jpg']);\r\n+saveas(fig4, ['Results/' '4.jpg']);\r\n+saveas(fig5, ['Results/' '5.jpg']);\r\n+saveas(fig6, ['Results/' '6.jpg']);\r\n+saveas(fig7, ['Results/' '7.jpg']);\r\n+saveas(fig8, ['Results/' '8.jpg']);\r\n+saveas(fig9, ['Results/' '9.jpg']);\r\n+saveas(fig10, ['Results/' '10.jpg']);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1734744698185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n for i = 1:6\r\n     subplot(3,2,i);\r\n     hold on;\r\n     \r\n-    plot(res.t,res.u(:,i), colors{i}); \r\n+    plot(res.t(2:end),res.u(2:end,i), colors{i}); \r\n     xlabel('Time (s)');\r\n     ylabel('Force (N)');\r\n    % 设置图例\r\n     leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n@@ -215,236 +215,24 @@\n     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n     set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n end\r\n sgtitle('The responses of damping');\r\n-saveas(fig1, ['Results/' '1.jpg']);\r\n-saveas(fig2, ['Results/' '2.jpg']);\r\n-saveas(fig3, ['Results/' '3.jpg']);\r\n-saveas(fig4, ['Results/' '4.jpg']);\r\n-saveas(fig5, ['Results/' '5.jpg']);\r\n-saveas(fig6, ['Results/' '6.jpg']);\r\n-saveas(fig7, ['Results/' '7.jpg']);\r\n-saveas(fig8, ['Results/' '8.jpg']);\r\n-saveas(fig9, ['Results/' '9.jpg']);\r\n-saveas(fig10, ['Results/' '10.jpg']);\n-function []=plotAllData(res,ctrl)\r\n-% Set Figure default values\r\n-set(0,'DefaultTextInterpreter','latex');\r\n-set(0,'DefaultLegendInterpreter','latex');\r\n-set(0,'DefaultAxesFontSize',11);\r\n-set(0,'DefaultLineLineWidth',2.0);\r\n-set(0,'DefaultAxesLineWidth',0.5);\r\n-set(0,'defaultAxesXGrid','on')\r\n-set(0,'defaultAxesYGrid','on')\r\n-set(0,'defaultAxesNextPlot','add')\r\n-% plot energy\r\n-fig1 = figure(1);\r\n-set(fig1, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-subplot(2,1,1)\r\n-plot(res.t,res.H)\r\n-xlabel('time (s)')\r\n-ylabel('Open-loop energy')\r\n-\r\n-subplot(2,1,2)\r\n-\r\n-plot(res.t,res.Hd)\r\n-grid on\r\n-xlabel('time (s)')\r\n-ylabel('Closed-loop energy $H_{smc}$')\r\n-\r\n-posArray=[\"x\",\"y\",\"z\",\"\\phi\",\"\\theta\",\"\\psi\"];\r\n-% 创建六个子图\r\n-fig2 = figure(2);\r\n-set(fig2, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n+fig11 = figure(11);\r\n colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.q(:,i), colors{i}); \r\n-    plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n-    % plot(res.t, res.q_hat2(:,i), '--','Color',[1 0 0]);\r\n-    xlabel('Time (s)');\r\n-    ylabel('position');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-title('The responses of position');\r\n \r\n-% 创建一个新的图形窗口\r\n-if ctrl.selector == 1 ||2\r\n-fig3 = figure(3);\r\n-set(fig3, 'Position', [100 100 1000 800]); % 设置图形窗口的位置和大小\r\n-\r\n-% 定义颜色序列\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-clf;\r\n-\r\n-% 绘制每一条曲线\r\n for i = 1:6\r\n-    plot(res.t, res.phi(:,i), colors{i}); % 使用指定的颜色绘制曲线\r\n-    hold on; % 允许在同一图上绘制多条线\r\n-end\r\n-\r\n-% 设置图表属性\r\n-xlabel('Time (s)');\r\n-ylabel('Sliding mode surface');\r\n-title('The responses of sliding mode surface $\\sigma$');\r\n-\r\n-% 设置图例\r\n-legends = cell(1, 6);\r\n-for i = 1:6\r\n-    legends{i} = ['$' char(posArray(i)) '$']; % 假设 posArray 已经定义好\r\n-end\r\n-leg = legend(legends, 'Location', 'best');\r\n-set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-% zp = BaseZoom();\r\n-% zp.run;\r\n-%  zp.run;\r\n-% 保存图形\r\n-\r\n- end\r\n-% 创建六个子图\r\n-fig4 = figure(4);\r\n-\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n     subplot(3,2,i);\r\n     hold on;\r\n-    \r\n-    plot(res.t,res.u(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('Force (N)');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of input $u$')\r\n-\r\n-% 创建六个子图\r\n-fig5 = figure(5);\r\n-set(fig5, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.qe(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('error (m)');\r\n-    % if i == 1\r\n-    % zp = BaseZoom();\r\n-    %  zp.run;\r\n-    % end\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-\r\n-sgtitle('The responses of input $qe$')\r\n-\r\n-\r\n-\r\n-fig6=figure(6);\r\n-set(fig6, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.match_distur(:,i), '-','Color',[0 0 0]); \r\n-     plot(res.t,res.dis(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('Force (N)');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of disturbances')\r\n-\r\n-\r\n-\r\n-fig7=figure(7);\r\n-% 假设 res.q 和 res.qd 是 Nx6 的数组\r\n-% 实际轨迹和姿态数据\r\n-xyz_actual = res.q(:, 1:3);\r\n-\r\n-\r\n-% 理想轨迹和姿态数据\r\n-xyz_ideal = res.qd(:, 1:3);\r\n-\r\n-\r\n-% 提取 x, y, z 坐标\r\n-x_actual = xyz_actual(:, 1);\r\n-y_actual = xyz_actual(:, 2);\r\n-z_actual = xyz_actual(:, 3);\r\n-\r\n-x_ideal = xyz_ideal(:, 1);\r\n-y_ideal = xyz_ideal(:, 2);\r\n-z_ideal = xyz_ideal(:, 3);\r\n-\r\n-\r\n-\r\n-\r\n-% 绘制三维轨迹\r\n-plot3(x_actual, y_actual, z_actual, 'r');\r\n-hold on;\r\n-plot3(x_ideal, y_ideal, z_ideal,'--','Color',[0 0 0]);\r\n-grid on;\r\n-xlabel('X');\r\n-ylabel('Y');\r\n-zlabel('Z');\r\n-view(3)\r\n-\r\n-legend(\"q\", \"$q_d$\");\r\n-hold off;\r\n-\r\n-\r\n-% 创建六个子图\r\n-fig8 = figure(8);\r\n-set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n     % 绘制q和qd\r\n-    plot(res.t, res.p0(:,i), colors{i}); \r\n-    plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n-    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n-    xlabel('Time (s)');\r\n-    ylabel('p');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of p');\r\n-if ctrl.selector == 1\r\n+    plot(res.t, res.pe(:,i), colors{i}); \r\n \r\n-figure(9);\r\n-plot(res.t,res.k4);\r\n-disp(\"非线性级联观测器平均绝对偏差\")\r\n-data = res.dis - res.match_distur;\r\n-mad(data,0)\r\n-end\r\n-figure(10);\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.Kd(:,i), colors{i}); \r\n-\r\n     xlabel('Time (s)');\r\n-    ylabel('damping');\r\n+    ylabel('pe');\r\n    % 设置图例\r\n     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n     set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n end\r\n-sgtitle('The responses of damping');\r\n+sgtitle('The responses of pe');\r\n saveas(fig1, ['Results/' '1.jpg']);\r\n saveas(fig2, ['Results/' '2.jpg']);\r\n saveas(fig3, ['Results/' '3.jpg']);\r\n saveas(fig4, ['Results/' '4.jpg']);\r\n@@ -452,455 +240,6 @@\n saveas(fig6, ['Results/' '6.jpg']);\r\n saveas(fig7, ['Results/' '7.jpg']);\r\n saveas(fig8, ['Results/' '8.jpg']);\r\n saveas(fig9, ['Results/' '9.jpg']);\r\n-saveas(fig10, ['Results/' '10.jpg']);\n-function []=plotAllData(res,ctrl)\r\n-% Set Figure default values\r\n-set(0,'DefaultTextInterpreter','latex');\r\n-set(0,'DefaultLegendInterpreter','latex');\r\n-set(0,'DefaultAxesFontSize',11);\r\n-set(0,'DefaultLineLineWidth',2.0);\r\n-set(0,'DefaultAxesLineWidth',0.5);\r\n-set(0,'defaultAxesXGrid','on')\r\n-set(0,'defaultAxesYGrid','on')\r\n-set(0,'defaultAxesNextPlot','add')\r\n-% plot energy\r\n-fig1 = figure(1);\r\n-set(fig1, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-subplot(2,1,1)\r\n-plot(res.t,res.H)\r\n-xlabel('time (s)')\r\n-ylabel('Open-loop energy')\r\n-\r\n-subplot(2,1,2)\r\n-\r\n-plot(res.t,res.Hd)\r\n-grid on\r\n-xlabel('time (s)')\r\n-ylabel('Closed-loop energy $H_{smc}$')\r\n-\r\n-posArray=[\"x\",\"y\",\"z\",\"\\phi\",\"\\theta\",\"\\psi\"];\r\n-% 创建六个子图\r\n-fig2 = figure(2);\r\n-set(fig2, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.q(:,i), colors{i}); \r\n-    plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n-    % plot(res.t, res.q_hat2(:,i), '--','Color',[1 0 0]);\r\n-    xlabel('Time (s)');\r\n-    ylabel('position');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-title('The responses of position');\r\n-\r\n-% 创建一个新的图形窗口\r\n-if ctrl.selector == 1 ||2\r\n-fig3 = figure(3);\r\n-set(fig3, 'Position', [100 100 1000 800]); % 设置图形窗口的位置和大小\r\n-\r\n-% 定义颜色序列\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-clf;\r\n-\r\n-% 绘制每一条曲线\r\n-for i = 1:6\r\n-    plot(res.t, res.phi(:,i), colors{i}); % 使用指定的颜色绘制曲线\r\n-    hold on; % 允许在同一图上绘制多条线\r\n-end\r\n-\r\n-% 设置图表属性\r\n-xlabel('Time (s)');\r\n-ylabel('Sliding mode surface');\r\n-title('The responses of sliding mode surface $\\sigma$');\r\n-\r\n-% 设置图例\r\n-legends = cell(1, 6);\r\n-for i = 1:6\r\n-    legends{i} = ['$' char(posArray(i)) '$']; % 假设 posArray 已经定义好\r\n-end\r\n-leg = legend(legends, 'Location', 'best');\r\n-set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-% zp = BaseZoom();\r\n-% zp.run;\r\n-%  zp.run;\r\n-% 保存图形\r\n-\r\n- end\r\n-% 创建六个子图\r\n-fig4 = figure(4);\r\n-\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.u(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('Force (N)');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of input $u$')\r\n-\r\n-% 创建六个子图\r\n-fig5 = figure(5);\r\n-set(fig5, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.qe(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('error (m)');\r\n-    % if i == 1\r\n-    % zp = BaseZoom();\r\n-    %  zp.run;\r\n-    % end\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-\r\n-sgtitle('The responses of input $qe$')\r\n-\r\n-\r\n-\r\n-fig6=figure(6);\r\n-set(fig6, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.match_distur(:,i), '-','Color',[0 0 0]); \r\n-     plot(res.t,res.dis(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('Force (N)');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of disturbances')\r\n-\r\n-\r\n-\r\n-fig7=figure(7);\r\n-% 假设 res.q 和 res.qd 是 Nx6 的数组\r\n-% 实际轨迹和姿态数据\r\n-xyz_actual = res.q(:, 1:3);\r\n-\r\n-\r\n-% 理想轨迹和姿态数据\r\n-xyz_ideal = res.qd(:, 1:3);\r\n-\r\n-\r\n-% 提取 x, y, z 坐标\r\n-x_actual = xyz_actual(:, 1);\r\n-y_actual = xyz_actual(:, 2);\r\n-z_actual = xyz_actual(:, 3);\r\n-\r\n-x_ideal = xyz_ideal(:, 1);\r\n-y_ideal = xyz_ideal(:, 2);\r\n-z_ideal = xyz_ideal(:, 3);\r\n-\r\n-\r\n-\r\n-\r\n-% 绘制三维轨迹\r\n-plot3(x_actual, y_actual, z_actual, 'r');\r\n-hold on;\r\n-plot3(x_ideal, y_ideal, z_ideal,'--','Color',[0 0 0]);\r\n-grid on;\r\n-xlabel('X');\r\n-ylabel('Y');\r\n-zlabel('Z');\r\n-view(3)\r\n-\r\n-legend(\"q\", \"$q_d$\");\r\n-hold off;\r\n-\r\n-\r\n-% 创建六个子图\r\n-fig8 = figure(8);\r\n-set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.p0(:,i), colors{i}); \r\n-    plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n-    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n-    xlabel('Time (s)');\r\n-    ylabel('p');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of p');\r\n-if ctrl.selector == 1\r\n-\r\n-figure(9);\r\n-plot(res.t,res.k4);\r\n-disp(\"非线性级联观测器平均绝对偏差\")\r\n-data = res.dis - res.match_distur;\r\n-mad(data,0)\r\n-end\r\n-figure(10);\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.Kd(:,i), colors{i}); \r\n-\r\n-    xlabel('Time (s)');\r\n-    ylabel('damping');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of damping');\r\n-saveas(fig1, ['Results/' '1.jpg']);\r\n-saveas(fig2, ['Results/' '2.jpg']);\r\n-saveas(fig3, ['Results/' '3.jpg']);\r\n-saveas(fig4, ['Results/' '4.jpg']);\r\n-saveas(fig5, ['Results/' '5.jpg']);\r\n-saveas(fig6, ['Results/' '6.jpg']);\r\n-saveas(fig7, ['Results/' '7.jpg']);\n-function []=plotAllData(res,ctrl)\r\n-% Set Figure default values\r\n-set(0,'DefaultTextInterpreter','latex');\r\n-set(0,'DefaultLegendInterpreter','latex');\r\n-set(0,'DefaultAxesFontSize',11);\r\n-set(0,'DefaultLineLineWidth',2.0);\r\n-set(0,'DefaultAxesLineWidth',0.5);\r\n-set(0,'defaultAxesXGrid','on')\r\n-set(0,'defaultAxesYGrid','on')\r\n-set(0,'defaultAxesNextPlot','add')\r\n-% plot energy\r\n-fig1 = figure(1);\r\n-set(fig1, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-subplot(2,1,1)\r\n-plot(res.t,res.H)\r\n-xlabel('time (s)')\r\n-ylabel('Open-loop energy')\r\n-\r\n-subplot(2,1,2)\r\n-\r\n-plot(res.t,res.Hd)\r\n-grid on\r\n-xlabel('time (s)')\r\n-ylabel('Closed-loop energy $H_{smc}$')\r\n-\r\n-posArray=[\"x\",\"y\",\"z\",\"\\phi\",\"\\theta\",\"\\psi\"];\r\n-% 创建六个子图\r\n-fig2 = figure(2);\r\n-set(fig2, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.q(:,i), colors{i}); \r\n-    plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n-    % plot(res.t, res.q_hat2(:,i), '--','Color',[1 0 0]);\r\n-    xlabel('Time (s)');\r\n-    ylabel('position');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-title('The responses of position');\r\n-\r\n-% 创建一个新的图形窗口\r\n-if ctrl.selector == 1 ||2\r\n-fig3 = figure(3);\r\n-set(fig3, 'Position', [100 100 1000 800]); % 设置图形窗口的位置和大小\r\n-\r\n-% 定义颜色序列\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-clf;\r\n-\r\n-% 绘制每一条曲线\r\n-for i = 1:6\r\n-    plot(res.t, res.phi(:,i), colors{i}); % 使用指定的颜色绘制曲线\r\n-    hold on; % 允许在同一图上绘制多条线\r\n-end\r\n-\r\n-% 设置图表属性\r\n-xlabel('Time (s)');\r\n-ylabel('Sliding mode surface');\r\n-title('The responses of sliding mode surface $\\sigma$');\r\n-\r\n-% 设置图例\r\n-legends = cell(1, 6);\r\n-for i = 1:6\r\n-    legends{i} = ['$' char(posArray(i)) '$']; % 假设 posArray 已经定义好\r\n-end\r\n-leg = legend(legends, 'Location', 'best');\r\n-set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-% zp = BaseZoom();\r\n-% zp.run;\r\n-%  zp.run;\r\n-% 保存图形\r\n-\r\n- end\r\n-% 创建六个子图\r\n-fig4 = figure(4);\r\n-\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.u(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('Force (N)');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of input $u$')\r\n-\r\n-% 创建六个子图\r\n-fig5 = figure(5);\r\n-set(fig5, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.qe(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('error (m)');\r\n-    % if i == 1\r\n-    % zp = BaseZoom();\r\n-    %  zp.run;\r\n-    % end\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-\r\n-sgtitle('The responses of input $qe$')\r\n-\r\n-\r\n-\r\n-fig6=figure(6);\r\n-set(fig6, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    \r\n-    plot(res.t,res.match_distur(:,i), '--','Color',[0 0 0]); \r\n-     plot(res.t,res.dis(:,i), colors{i}); \r\n-    xlabel('Time (s)');\r\n-    ylabel('Force (N)');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of disturbances')\r\n-\r\n-\r\n-\r\n-fig7=figure(7);\r\n-% 假设 res.q 和 res.qd 是 Nx6 的数组\r\n-% 实际轨迹和姿态数据\r\n-xyz_actual = res.q(:, 1:3);\r\n-\r\n-\r\n-% 理想轨迹和姿态数据\r\n-xyz_ideal = res.qd(:, 1:3);\r\n-\r\n-\r\n-% 提取 x, y, z 坐标\r\n-x_actual = xyz_actual(:, 1);\r\n-y_actual = xyz_actual(:, 2);\r\n-z_actual = xyz_actual(:, 3);\r\n-\r\n-x_ideal = xyz_ideal(:, 1);\r\n-y_ideal = xyz_ideal(:, 2);\r\n-z_ideal = xyz_ideal(:, 3);\r\n-\r\n-\r\n-\r\n-\r\n-% 绘制三维轨迹\r\n-plot3(x_actual, y_actual, z_actual, 'r');\r\n-hold on;\r\n-plot3(x_ideal, y_ideal, z_ideal,'--','Color',[0 0 0]);\r\n-grid on;\r\n-xlabel('X');\r\n-ylabel('Y');\r\n-zlabel('Z');\r\n-view(3)\r\n-\r\n-legend(\"q\", \"$q_d$\");\r\n-hold off;\r\n-\r\n-\r\n-% 创建六个子图\r\n-fig8 = figure(8);\r\n-set(fig8, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.p0(:,i), colors{i}); \r\n-    plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n-    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n-    xlabel('Time (s)');\r\n-    ylabel('p');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of p');\r\n-if ctrl.selector == 1\r\n-\r\n-figure(9);\r\n-plot(res.t,res.k4);\r\n-disp(\"非线性级联观测器平均绝对偏差\")\r\n-data = res.dis - res.match_distur;\r\n-mad(data,0)\r\n-end\r\n-figure(10);\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n-\r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.Kd(:,i), colors{i}); \r\n-\r\n-    xlabel('Time (s)');\r\n-    ylabel('damping');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of damping');\r\n-saveas(fig1, ['Results/' '1.jpg']);\r\n-saveas(fig2, ['Results/' '2.jpg']);\r\n-saveas(fig3, ['Results/' '3.jpg']);\r\n-saveas(fig4, ['Results/' '4.jpg']);\r\n-saveas(fig5, ['Results/' '5.jpg']);\r\n-saveas(fig6, ['Results/' '6.jpg']);\r\n-saveas(fig7, ['Results/' '7.jpg']);\n\\ No newline at end of file\n+saveas(fig10, ['Results/' '10.jpg']);\r\n+saveas(fig11, ['Results/' '11.jpg']);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1734745205859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,11 +181,11 @@\n for i = 1:6\r\n     subplot(3,2,i);\r\n     hold on;\r\n     % 绘制q和qd\r\n-    plot(res.t, res.p0(:,i), colors{i}); \r\n+    plot(res.t, res.p(:,i), colors{i}); \r\n     plot(res.t, res.pd(:,i), '--','Color',[0 0 0]);\r\n-    plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n+    % plot(res.t, res.p_hat2(:,i), '--','Color',[0 0 0]);\r\n     xlabel('Time (s)');\r\n     ylabel('p');\r\n    % 设置图例\r\n     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n@@ -215,24 +215,24 @@\n     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n     set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n end\r\n sgtitle('The responses of damping');\r\n-fig11 = figure(11);\r\n-colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n+% fig11 = figure(11);\r\n+% colors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n \r\n-for i = 1:6\r\n-    subplot(3,2,i);\r\n-    hold on;\r\n-    % 绘制q和qd\r\n-    plot(res.t, res.pe(:,i), colors{i}); \r\n+% for i = 1:6\r\n+%     subplot(3,2,i);\r\n+%     hold on;\r\n+%     % 绘制q和qd\r\n+%     plot(res.t, res.pd(:,i), colors{i}); \r\n \r\n-    xlabel('Time (s)');\r\n-    ylabel('pe');\r\n-   % 设置图例\r\n-    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n-    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n-end\r\n-sgtitle('The responses of pe');\r\n+%     xlabel('Time (s)');\r\n+%     ylabel('pe');\r\n+%    % 设置图例\r\n+%     leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n+%     set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n+% end\r\n+% sgtitle('The responses of pe');\r\n saveas(fig1, ['Results/' '1.jpg']);\r\n saveas(fig2, ['Results/' '2.jpg']);\r\n saveas(fig3, ['Results/' '3.jpg']);\r\n saveas(fig4, ['Results/' '4.jpg']);\r\n"
                },
                {
                    "date": 1734746766122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -240,6 +240,5 @@\n saveas(fig6, ['Results/' '6.jpg']);\r\n saveas(fig7, ['Results/' '7.jpg']);\r\n saveas(fig8, ['Results/' '8.jpg']);\r\n saveas(fig9, ['Results/' '9.jpg']);\r\n-saveas(fig10, ['Results/' '10.jpg']);\r\n-saveas(fig11, ['Results/' '11.jpg']);\n\\ No newline at end of file\n+saveas(fig10, ['Results/' '10.jpg']);\n\\ No newline at end of file\n"
                }
            ],
            "date": 1732425331634,
            "name": "Commit-0",
            "content": "function []=plotAllData(res,ctrl)\r\n% Set Figure default values\r\nset(0,'DefaultTextInterpreter','latex');\r\nset(0,'DefaultLegendInterpreter','latex');\r\nset(0,'DefaultAxesFontSize',11);\r\nset(0,'DefaultLineLineWidth',2.0);\r\nset(0,'DefaultAxesLineWidth',0.5);\r\nset(0,'defaultAxesXGrid','on')\r\nset(0,'defaultAxesYGrid','on')\r\nset(0,'defaultAxesNextPlot','add')\r\n% plot energy\r\nfig1 = figure(1);\r\nset(fig1, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\nsubplot(2,1,1)\r\nplot(res.t,res.H)\r\nxlabel('time (s)')\r\nylabel('Open-loop energy')\r\n\r\nsubplot(2,1,2)\r\n\r\nplot(res.t,res.Hd)\r\ngrid on\r\nxlabel('time (s)')\r\nylabel('Closed-loop energy $H_{smc}$')\r\n\r\nposArray=[\"x\",\"y\",\"z\",\"\\phi\",\"\\theta\",\"\\psi\"];\r\n% 创建六个子图\r\nfig2 = figure(2);\r\nset(fig2, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\ncolors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\nfor i = 1:6\r\n    subplot(3,2,i);\r\n    hold on;\r\n    % 绘制q和qd\r\n    plot(res.t, res.q(:,i), colors{i}); \r\n    plot(res.t, res.qd(:,i), '--','Color',[0 0 0]);\r\n    xlabel('Time (s)');\r\n    ylabel('position');\r\n   % 设置图例\r\n    leg = legend(['${' char(posArray(i)) '}$'], ['${' char(posArray(i)) '}_d$']);\r\n    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\nend\r\ntitle('The responses of position');\r\n\r\n% 创建一个新的图形窗口\r\nif ctrl.selector == 1 ||2\r\nfig3 = figure(3);\r\nset(fig3, 'Position', [100 100 1000 800]); % 设置图形窗口的位置和大小\r\n\r\n% 定义颜色序列\r\ncolors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\n\r\nclf;\r\n\r\n% 绘制每一条曲线\r\nfor i = 1:6\r\n    plot(res.t, res.phi(:,i), colors{i}); % 使用指定的颜色绘制曲线\r\n    hold on; % 允许在同一图上绘制多条线\r\nend\r\n\r\n% 设置图表属性\r\nxlabel('Time (s)');\r\nylabel('Sliding mode surface');\r\ntitle('The responses of sliding mode surface $\\sigma$');\r\n\r\n% 设置图例\r\nlegends = cell(1, 6);\r\nfor i = 1:6\r\n    legends{i} = ['$' char(posArray(i)) '$']; % 假设 posArray 已经定义好\r\nend\r\nleg = legend(legends, 'Location', 'best');\r\nset(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\n% zp = BaseZoom();\r\n% zp.run;\r\n%  zp.run;\r\n% 保存图形\r\n\r\n end\r\n% 创建六个子图\r\nfig4 = figure(4);\r\n\r\ncolors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\nfor i = 1:6\r\n    subplot(3,2,i);\r\n    hold on;\r\n    \r\n    plot(res.t,res.u(:,i), colors{i}); \r\n    xlabel('Time (s)');\r\n    ylabel('Force (N)');\r\n   % 设置图例\r\n    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'northeast');\r\n    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\nend\r\nsgtitle('The responses of input $u$')\r\n\r\n% 创建六个子图\r\nfig5 = figure(5);\r\nset(fig5, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\ncolors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\nfor i = 1:6\r\n    subplot(3,2,i);\r\n    hold on;\r\n    \r\n    plot(res.t,res.qe(:,i), colors{i}); \r\n    xlabel('Time (s)');\r\n    ylabel('error (m)');\r\n    % if i == 1\r\n    % zp = BaseZoom();\r\n    %  zp.run;\r\n    % end\r\n   % 设置图例\r\n    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\nend\r\n\r\nsgtitle('The responses of input $qe$')\r\n\r\n\r\n\r\nfig6=figure(6);\r\nset(fig6, 'Position', [100 100 1000 800]); % 第三个和第四个参数分别是宽度和高度\r\ncolors = {'b', 'g', 'r', 'c', 'm', 'y'}; % 不同的颜色\r\nfor i = 1:6\r\n    subplot(3,2,i);\r\n    hold on;\r\n    \r\n    plot(res.t,res.match_distur(:,i), colors{i}); \r\n    plot(res.t,res.dis(:,i), colors{i}); \r\n    xlabel('Time (s)');\r\n    ylabel('Force (N)');\r\n   % 设置图例\r\n    leg = legend(['${' char(posArray(i)) '}$'] ,'Location', 'southeast');\r\n    set(leg, 'Interpreter', 'latex'); % 设置LaTeX解释器\r\nend\r\nsgtitle('The responses of disturbances')\r\n\r\n\r\n\r\nfig7=figure(7);\r\n% 假设 res.q 和 res.qd 是 Nx6 的数组\r\n% 实际轨迹和姿态数据\r\nxyz_actual = res.q(:, 1:3);\r\n\r\n\r\n% 理想轨迹和姿态数据\r\nxyz_ideal = res.qd(:, 1:3);\r\n\r\n\r\n% 提取 x, y, z 坐标\r\nx_actual = xyz_actual(:, 1);\r\ny_actual = xyz_actual(:, 2);\r\nz_actual = xyz_actual(:, 3);\r\n\r\nx_ideal = xyz_ideal(:, 1);\r\ny_ideal = xyz_ideal(:, 2);\r\nz_ideal = xyz_ideal(:, 3);\r\n\r\n\r\n\r\n\r\n% 绘制三维轨迹\r\nplot3(x_actual, y_actual, z_actual, 'r');\r\nhold on;\r\nplot3(x_ideal, y_ideal, z_ideal,'--','Color',[0 0 0]);\r\ngrid on;\r\nxlabel('X');\r\nylabel('Y');\r\nzlabel('Z');\r\nview(3)\r\n\r\nlegend(\"q\", \"$q_d$\");\r\nhold off;\r\n\r\n\r\n\r\nsaveas(fig1, ['Results/' '1.jpg']);\r\nsaveas(fig2, ['Results/' '2.jpg']);\r\nsaveas(fig3, ['Results/' '3.jpg']);\r\nsaveas(fig4, ['Results/' '4.jpg']);\r\nsaveas(fig5, ['Results/' '5.jpg']);\r\nsaveas(fig6, ['Results/' '6.jpg']);\r\nsaveas(fig7, ['Results/' '7.jpg']);"
        }
    ]
}